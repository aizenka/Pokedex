{"version":3,"sources":["components/header/index.js","components/header/header.js","components/pokeList/pokeList.js","components/pokeList/pokeTypeList.js","components/Store/pokeStore.js","components/Store/index.js","components/pokeDetails/pokeDetails.js","components/pokeDetails/randomPokemon.js","components/pokeTypeOptions/index.js","components/pokeTypeOptions/pokeTypeOptions.js","components/searchPanel/index.js","components/searchPanel/searchPanel.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","PokeList","observer","store","setPagination","useCallback","move","count","filter","length","setLimit","setOffset","limit","offset","getAllPokemons","then","data","setPokeList","catch","e","console","log","pokeList","useEffect","renderItems","arr","map","pokemon","i","id","name","pokeName","toUpperCase","slice","field","onClick","onPokemonSelected","filtered","filteredFullList","aria-hidden","PokeTypeList","getPokemonWithCurrentType","pokeTypeID","setPokeTypeList","item","url","match","extractId","updateList","filteredTypesList","filteredList","onTypeSelected","configure","enforceActions","_API_URL","pokeState","getResource","a","axios","get","res","results","error","getCurrentResource","transformPokeList","getPokemon","transformPokemon","getAllTypes","types","value","setFilteredFullList","updateFilter","setPokeStats","pokeStats","pokeTypeList","setPokeTypesOptions","pokeTypesOptions","pokeID","sprite","sprites","front_default","abilities","height","weight","pokemonList","this","makeObservable","observable","action","computed","matchesFilter","RegExp","test","PokeDetails","pokeTypes","type","renderTypes","pokeAbilities","ability","renderAbilities","src","alt","RandomPokemon","updateRandomPokemon","Math","floor","random","itemId","setInterval","clearInterval","PokeTypeOptions","opt","pokeTypeId","optionItem","getPokeOptions","onChange","target","SearchPanel","placeholder","App","showPokeDetailsComponent","showFilteredListByType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6cb609f.chunk.js","sourcesContent":["import Header from \"./header\";\r\nexport default Header;\r\n","import React from 'react'\r\nimport './header.scss'\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"wrapper\">\r\n        <h2>Pokedex</h2>\r\n        <h4>pokemon database</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeList.scss'\r\n\r\nconst PokeList = observer(({ store }) => {\r\n  const setPagination = useCallback(\r\n    (move, count) => {\r\n      if (!store.filter.length) {\r\n        if (count > 0) store.setLimit(count)\r\n        if (move === 1) store.setOffset(store.limit, 1)\r\n        if (move === -1) store.setOffset(store.limit, -1)\r\n        if (store.offset < 0) store.setOffset(store.offset, 0)\r\n        store\r\n          .getAllPokemons(store.limit, store.offset)\r\n          .then((data) => {\r\n            store.setPokeList(data)\r\n          })\r\n          .catch((e) => console.log(e))\r\n      }\r\n    },\r\n    [store.pokeList]\r\n  )\r\n\r\n  useEffect(() => {\r\n    setPagination()\r\n  }, [])\r\n\r\n  const renderItems = (arr) => {\r\n    if (!arr.length) return\r\n    return arr.map((pokemon, i) => {\r\n      const { id, name } = pokemon\r\n      const pokeName = name[0].toUpperCase() + name.slice(1)\r\n      const field = `${id.slice(1)}. ${pokeName}`\r\n      return (\r\n        <li\r\n          key={id}\r\n          className=\"pokelist-item\"\r\n          onClick={() => store.onPokemonSelected(id.slice(1))}\r\n        >\r\n          {field}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const filtered = store.filter.length\r\n    ? renderItems(store.filteredFullList)\r\n    : renderItems(store.pokeList)\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      <h2>Select pokemon</h2>\r\n      <div className=\"pokemons\">\r\n        {!store.pokeList.length && <span>Loading...</span>}\r\n        <ul>{filtered}</ul>\r\n      </div>\r\n      <div className=\"pagination-menu\">\r\n        <div className=\"pagination-arrow\">\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => setPagination(-1, 0)}\r\n          >\r\n            <i className=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => setPagination(1, 0)}\r\n          >\r\n            <i className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"pagination-list\">\r\n          <button\r\n            className=\"limit-list-item\"\r\n            onClick={() => setPagination(0, 10)}\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            className=\"limit-list-item\"\r\n            onClick={() => setPagination(0, 20)}\r\n          >\r\n            20\r\n          </button>\r\n          <button\r\n            className=\"limit-list-item\"\r\n            onClick={() => setPagination(0, 50)}\r\n          >\r\n            50\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeList\r\n","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeList.scss'\r\n\r\nconst PokeTypeList = observer(({ store }) => {\r\n  useEffect(() => {\r\n    store\r\n      .getPokemonWithCurrentType(store.pokeTypeID)\r\n      .then((data) => {\r\n        store.setPokeTypeList(data)\r\n      })\r\n      .catch((e) => console.log(e))\r\n  }, [store.pokeTypeID])\r\n\r\n  const extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)$/\r\n    return item.url.slice(0, -1).match(idRegExp)[0]\r\n  }\r\n\r\n  const updateList = (arr) => {\r\n    if (!arr.length) return\r\n\r\n    return arr.map((item) => {\r\n      const id = extractId(item.pokemon)\r\n      const name =\r\n        item.pokemon.name[0].toUpperCase() + item.pokemon.name.slice(1)\r\n      return (\r\n        <li\r\n          className=\"pokelist-item\"\r\n          key={id}\r\n          onClick={() => store.onPokemonSelected(id.slice(1))}\r\n        >\r\n          {id.slice(1)}.{name}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const filtered = updateList(store.filteredTypesList)\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      <h2>Poke list</h2>\r\n      <div className=\"pokemons\">\r\n        {!store.filteredList.length && <span>Loading...</span>}\r\n        <ul>{filtered}</ul>\r\n      </div>\r\n      <button\r\n        className=\"go-back-button\"\r\n        onClick={() => store.onTypeSelected('')}\r\n      >\r\n        Go to full list <i className=\"fa fa-home\"></i>\r\n      </button>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeTypeList\r\n","import { observable, action, makeObservable, configure, computed } from 'mobx'\r\nimport axios from 'axios'\r\n\r\nconfigure({ enforceActions: `observed` })\r\n\r\nconst _API_URL = 'https://pokeapi.co/api/v2'\r\nconst _DEFAULT_LIMIT = 10\r\nconst _DEFAULT_OFFSET = 0\r\nclass PokeStore {\r\n  constructor() {\r\n    this.pokeList = []\r\n    this.pokeStats = []\r\n    this.pokeTypesOptions = []\r\n    this.pokeTypeList = []\r\n    this.pokeTypeID = ''\r\n    this.pokeID = ''\r\n    this.filteredList = []\r\n    this.limit = _DEFAULT_LIMIT\r\n    this.offset = _DEFAULT_OFFSET\r\n    this.filter = ''\r\n\r\n    makeObservable(this, {\r\n      filteredList: observable,\r\n      pokeList: observable,\r\n      pokeID: observable,\r\n      pokeTypeID: observable,\r\n      pokeStats: observable,\r\n      filter: observable,\r\n      pokeTypesOptions: observable,\r\n      pokeTypeList: observable,\r\n      limit: observable,\r\n      offset: observable,\r\n      onPokemonSelected: action,\r\n      setPokeStats: action,\r\n      setPokeList: action,\r\n      setPokeTypesOptions: action,\r\n      onTypeSelected: action,\r\n      setLimit: action,\r\n      setOffset: action,\r\n      updateFilter: action,\r\n      setFilteredFullList: action,\r\n      filteredFullList: computed,\r\n      filteredTypesList: computed,\r\n    })\r\n  }\r\n\r\n  getResource = async (url) => {\r\n    try {\r\n      const res = await axios.get(`${_API_URL}${url}`)\r\n      return res.data.results\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  getCurrentResource = async (url) => {\r\n    try {\r\n      const res = await axios.get(`${_API_URL}${url}`)\r\n      return res.data\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  getAllPokemons = async (limit, offset) => {\r\n    const pokeList = await this.getResource(\r\n      `/pokemon?limit=${limit}&offset=${offset}`\r\n    )\r\n    return pokeList.map(this.transformPokeList)\r\n  }\r\n\r\n  getPokemon = async (id) => {\r\n    const pokemon = await this.getCurrentResource(`/pokemon/${id}`)\r\n    return this.transformPokemon(pokemon)\r\n  }\r\n\r\n  getAllTypes = async () => {\r\n    try {\r\n      const types = await this.getResource(`/type/`)\r\n      return types.map(this.transformPokeList)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  getPokemonWithCurrentType = async (id) => {\r\n    const pokeList = await this.getCurrentResource(`/type/${id}`)\r\n    return pokeList.pokemon\r\n  }\r\n\r\n  get filteredFullList() {\r\n    const matchesFilter = new RegExp(this.filter, 'i')\r\n    return this.filteredList.filter(\r\n      ({ name }) => !this.filter || matchesFilter.test(name)\r\n    )\r\n  }\r\n\r\n  get filteredTypesList() {\r\n    const matchesFilter = new RegExp(this.filter, 'i')\r\n    return this.pokeTypeList.filter(\r\n      ({ pokemon: { name } }) => !this.filter || matchesFilter.test(name)\r\n    )\r\n  }\r\n\r\n  setLimit = (data) => {\r\n    this.limit = data\r\n  }\r\n\r\n  setOffset = (data, value) => {\r\n    if (value === 1) {\r\n      this.offset += data\r\n    } else if (value === -1) {\r\n      this.offset -= data\r\n    } else if (value === 0) {\r\n      this.offset = 0\r\n    }\r\n  }\r\n\r\n  setFilteredFullList = (data) => {\r\n    this.filteredList = data\r\n  }\r\n\r\n  updateFilter = (value) => {\r\n    this.filter = value\r\n  }\r\n\r\n  setPokeStats = (data) => {\r\n    this.pokeStats = data\r\n  }\r\n\r\n  setPokeTypeList = (data) => {\r\n    this.pokeTypeList = data\r\n  }\r\n\r\n  setPokeTypesOptions = (data) => {\r\n    this.pokeTypesOptions = data\r\n  }\r\n\r\n  setPokeList = (data) => {\r\n    this.pokeList = data\r\n  }\r\n\r\n  onTypeSelected = (id) => {\r\n    this.pokeTypeID = id\r\n  }\r\n\r\n  onPokemonSelected = (id) => {\r\n    this.pokeID = id\r\n  }\r\n\r\n  extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)$/\r\n    return item.url.slice(0, -1).match(idRegExp)[0]\r\n  }\r\n\r\n  transformPokemon = (pokemon) => {\r\n    return {\r\n      name: pokemon.name,\r\n      id: pokemon.id,\r\n      sprite: pokemon.sprites.front_default,\r\n      abilities: pokemon.abilities,\r\n      types: pokemon.types,\r\n      height: pokemon.height,\r\n      weight: pokemon.weight,\r\n    }\r\n  }\r\n\r\n  transformPokeList = (pokemonList) => {\r\n    return {\r\n      id: this.extractId(pokemonList),\r\n      name: pokemonList.name,\r\n    }\r\n  }\r\n}\r\n\r\nconst pokeState = new PokeStore()\r\n\r\npokeState.getAllPokemons(1050, 0).then((data) => {\r\n  pokeState.setFilteredFullList(data)\r\n})\r\n\r\nexport default pokeState\r\n","import pokeState from \"./pokeStore\";\r\nexport default pokeState;\r\n","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeDetails.scss'\r\n// import { toJS } from \"mobx\"\r\n\r\nconst PokeDetails = observer(({ store }) => {\r\n  const updatePokemon = () => {\r\n    store\r\n      .getPokemon(store.pokeID)\r\n      .then((data) => store.setPokeStats(data))\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.pokeID) updatePokemon()\r\n  }, [store.pokeID])\r\n\r\n  const { name, abilities, types, height, weight, sprite } = store.pokeStats\r\n\r\n  const renderTypes = () => {\r\n    if (!types) return\r\n    const res = types.map((item) => {\r\n      return (\r\n        <li key={item.type.url} className=\"pokelist-item\">\r\n          - {item.type.name}\r\n        </li>\r\n      )\r\n    })\r\n    return res\r\n  }\r\n\r\n  const renderAbilities = () => {\r\n    if (!abilities) return\r\n\r\n    const res = abilities.map((item) => {\r\n      return <li key={item.ability.url}>- {item.ability.name}</li>\r\n    })\r\n    return res\r\n  }\r\n\r\n  const pokeTypes = renderTypes()\r\n  const pokeAbilities = renderAbilities()\r\n\r\n  return (\r\n    <div className=\"poke-info\">\r\n      {store.pokeStats.length && <span>Loading...</span>}\r\n      <h2>{name} card</h2>\r\n      <p>Height: {height}</p>\r\n      <p>Weight: {weight}</p>\r\n      <br />\r\n      <div className=\"wrapper\">\r\n        <ul>Types:{pokeTypes}</ul>\r\n      </div>\r\n      <br />\r\n      <div className=\"wrapper\">\r\n        <ul>Abilities: {pokeAbilities}</ul>\r\n      </div>\r\n      <img src={sprite} alt=\"\"></img>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeDetails\r\n","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeDetails.scss'\r\n\r\nconst RandomPokemon = observer(({ store }) => {\r\n  const updateRandomPokemon = () => {\r\n    const id = Math.floor(Math.random() * 160 + 50)\r\n    store\r\n      .getPokemon(id)\r\n      .then((data) => store.setPokeStats(data))\r\n      .catch((e) => console.log(e))\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateRandomPokemon()\r\n    let itemId = setInterval(() => updateRandomPokemon(), 5000)\r\n    return () => {\r\n      clearInterval(itemId)\r\n    }\r\n  }, [])\r\n\r\n  const { name, abilities, types, height, weight, sprite } = store.pokeStats\r\n\r\n  const renderTypes = () => {\r\n    if (!types) return\r\n    const res = types.map((item) => {\r\n      return (\r\n        <li key={item.type.url} className=\"pokelist-item\">\r\n          - {item.type.name}\r\n        </li>\r\n      )\r\n    })\r\n    return res\r\n  }\r\n\r\n  const renderAbilities = () => {\r\n    if (!abilities) return\r\n\r\n    const res = abilities.map((item) => {\r\n      return (\r\n        <li key={item.ability.url} className=\"pokelist-item\">\r\n          - {item.ability.name}\r\n        </li>\r\n      )\r\n    })\r\n    return res\r\n  }\r\n\r\n  const pokeTypes = renderTypes()\r\n  const pokeAbilities = renderAbilities()\r\n\r\n  return (\r\n    <div className=\"poke-info\">\r\n      {store.pokeStats.length && <span>Loading...</span>}\r\n      <div className=\"wrapper-info\">\r\n        <h2>{name} card</h2>\r\n        <p>Height: {height}</p>\r\n        <p>Weight: {weight}</p>\r\n        <br />\r\n        <div className=\"wrapper\">\r\n          <ul>Types:{pokeTypes}</ul>\r\n        </div>\r\n        <br />\r\n        <div className=\"wrapper\">\r\n          <ul>Abilities: {pokeAbilities}</ul>\r\n        </div>\r\n        <img src={sprite} alt=\"\"></img>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default RandomPokemon\r\n","import PokeTypeOptions from \"./pokeTypeOptions\";\r\nexport default PokeTypeOptions;\r\n","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeTypeOptions.scss'\r\n\r\nconst PokeTypeOptions = observer(({ store }) => {\r\n  useEffect(() => {\r\n    store.getAllTypes().then((data) => {\r\n      store.setPokeTypesOptions(data)\r\n    })\r\n  }, [])\r\n\r\n  const getPokeOptions = (arr) => {\r\n    if (!arr.length) return\r\n    if (store.pokeTypeId === 0) return\r\n    return arr.map((optionItem, i) => {\r\n      const { id, name } = optionItem\r\n      return (\r\n        <option value={id.slice(1)} key={i}>\r\n          {name}\r\n        </option>\r\n      )\r\n    })\r\n  }\r\n\r\n  const opt = getPokeOptions(store.pokeTypesOptions)\r\n\r\n  return (\r\n    <div className=\"poke-options\">\r\n      <span>Type: </span>\r\n      <select onChange={(e) => store.onTypeSelected(e.target.value)}>\r\n        {opt}\r\n      </select>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeTypeOptions\r\n","import SearchPanel from \"./searchPanel\";\r\nexport default SearchPanel;\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './searchPanel.scss'\r\n\r\nconst SearchPanel = observer(({ store }) => {\r\n  const filterNames = (value) => {\r\n    store.updateFilter(value)\r\n  }\r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <input\r\n        className=\"filter-input\"\r\n        value={store.filter}\r\n        onChange={(e) => filterNames(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Enter pokemon name\"\r\n      ></input>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default SearchPanel\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Header from '../header'\nimport { PokeList, PokeTypesList } from '../pokeList'\nimport pokeState from '../Store'\nimport { PokeDetails, RandomPokemon } from '../pokeDetails'\nimport PokeTypeOptions from '../pokeTypeOptions'\nimport SearchPanel from '../searchPanel'\nimport './App.scss'\n\nconst App = () => {\n  const showPokeDetailsComponent = pokeState.pokeID ? (\n    <PokeDetails store={pokeState} />\n  ) : (\n    <RandomPokemon store={pokeState} />\n  )\n\n  const showFilteredListByType = pokeState.pokeTypeID ? (\n    <PokeTypesList store={pokeState} />\n  ) : (\n    <PokeList store={pokeState} />\n  )\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"filter\">\n        <SearchPanel store={pokeState} />\n        <PokeTypeOptions store={pokeState} />\n      </div>\n      <div className=\"main-menu\">\n        {showFilteredListByType}\n        {showPokeDetailsComponent}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/app'\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}