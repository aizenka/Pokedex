{"version":3,"sources":["components/header/index.js","components/header/header.js","components/pokeList/pokeList.js","components/pokeList/pokeTypeList.js","components/Store/pokeStore.js","components/Store/index.js","components/pokeDetails/pokeDetails.js","components/pokeDetails/randomPokemon.js","components/pokeTypeOptions/index.js","components/pokeTypeOptions/pokeTypeOptions.js","components/searchPanel/index.js","components/searchPanel/searchPanel.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","className","PokeList","observer","store","setPagination","useCallback","move","count","filter","setLimit","setOffset","limit","offset","getAllPokemons","then","data","setPokeList","catch","e","console","log","pokeList","useEffect","renderItems","arr","map","pokemon","i","id","name","pokeName","toUpperCase","slice","field","onClick","onPokemonSelected","filtered","filteredFullList","aria-hidden","PokeTypeList","getPokemonWithCurrentType","pokeTypeID","setPokeTypeList","item","url","match","extractId","updateList","filteredTypesList","onTypeSelected","configure","enforceActions","pokeState","getResource","a","axios","get","_apiURL","res","results","error","getCurrentResource","transformPokeList","getPokemon","transformPokemon","getAllTypes","types","value","setFilteredFullList","filteredList","updateFilter","setPokeStats","pokeStats","pokeTypeList","setPokeTypesOptions","pokeTypesOptions","pokeID","sprite","sprites","front_default","abilities","height","weight","pokemonList","this","makeObservable","observable","action","computed","matchesFilter","RegExp","test","PokeDetails","updatePokemon","pokeTypes","type","renderTypes","pokeAbilities","ability","renderAbilities","src","alt","RandomPokemon","updateRandomPokemon","Math","floor","random","itemId","setInterval","clearInterval","PokeTypeOptions","opt","pokeTypeId","optionItem","getPokeOptions","onChange","target","SearchPanel","placeholder","App","showPokeDetailsComponent","showFilteredListByType","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb6790a9.chunk.js","sourcesContent":["import Header from \"./header\";\r\nexport default Header;\r\n","import React from 'react'\r\nimport './header.scss'\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"wrapper\">\r\n        <h2>Pokedex</h2>\r\n        <h4>pokemon database</h4>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeList.scss'\r\n\r\nconst PokeList = observer(({ store }) => {\r\n  const setPagination = useCallback(\r\n    (move, count) => {\r\n      if (store.filter === '') {\r\n        if (count > 0) store.setLimit(count)\r\n        if (move === 1) store.setOffset(store.limit, 1)\r\n        if (move === -1) store.setOffset(store.limit, -1)\r\n        if (store.offset < 0) store.setOffset(store.offset, 0)\r\n        store\r\n          .getAllPokemons(store.limit, store.offset)\r\n          .then((data) => {\r\n            store.setPokeList(data)\r\n          })\r\n          .catch((e) => console.log(e))\r\n      }\r\n    },\r\n    [store.pokeList]\r\n  )\r\n\r\n  useEffect(() => {\r\n    setPagination()\r\n  }, [])\r\n\r\n  const renderItems = (arr) => {\r\n    if (!arr) {\r\n      return\r\n    }\r\n    return arr.map((pokemon, i) => {\r\n      const { id, name } = pokemon\r\n      const pokeName = name[0].toUpperCase() + name.slice(1)\r\n      const field = `${id.slice(1)}. ${pokeName}`\r\n      return (\r\n        <li\r\n          key={id}\r\n          className=\"pokelist-item\"\r\n          onClick={() => store.onPokemonSelected(id.slice(1))}\r\n        >\r\n          {field}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const filtered =\r\n    store.filter !== ''\r\n      ? renderItems(store.filteredFullList)\r\n      : renderItems(store.pokeList)\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      {!store.pokeList && <span>Loading...</span>}\r\n      <h2>Select pokemon</h2>\r\n      <div className=\"pokemons\">\r\n        <ul>{filtered}</ul>\r\n      </div>\r\n      <div className=\"pagination-menu\">\r\n        <div className=\"pagination-arrow\">\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => setPagination(-1, 0)}\r\n          >\r\n            <i className=\"fa fa-long-arrow-left\" aria-hidden=\"true\"></i>\r\n          </button>\r\n          <button\r\n            className=\"pagination-button\"\r\n            onClick={() => setPagination(1, 0)}\r\n          >\r\n            <i className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></i>\r\n          </button>\r\n        </div>\r\n        <div className=\"pagination-list\">\r\n          <button\r\n            className=\"limit-list-item\"\r\n            onClick={() => setPagination(0, 10)}\r\n          >\r\n            10\r\n          </button>\r\n          <button\r\n            className=\"limit-list-item\"\r\n            onClick={() => setPagination(0, 20)}\r\n          >\r\n            20\r\n          </button>\r\n          <button\r\n            className=\"limit-list-item\"\r\n            onClick={() => setPagination(0, 50)}\r\n          >\r\n            50\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeList\r\n","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeList.scss'\r\n\r\nconst PokeTypeList = observer(({ store }) => {\r\n  useEffect(() => {\r\n    store.getPokemonWithCurrentType(store.pokeTypeID).then((data) => {\r\n      store.setPokeTypeList(data)\r\n    })\r\n  }, [store.pokeTypeID])\r\n\r\n  const extractId = (item) => {\r\n    const idRegExp = /\\/([0-9]*)$/\r\n    return item.url.slice(0, -1).match(idRegExp)[0]\r\n  }\r\n\r\n  const updateList = (arr) => {\r\n    if (!arr) {\r\n      return\r\n    }\r\n\r\n    return arr.map((item) => {\r\n      const id = extractId(item.pokemon)\r\n      const name =\r\n        item.pokemon.name[0].toUpperCase() + item.pokemon.name.slice(1)\r\n      return (\r\n        <li\r\n          className=\"pokelist-item\"\r\n          key={id}\r\n          onClick={() => store.onPokemonSelected(id.slice(1))}\r\n        >\r\n          {id.slice(1)}.{name}\r\n        </li>\r\n      )\r\n    })\r\n  }\r\n\r\n  const filtered = updateList(store.filteredTypesList)\r\n\r\n  return (\r\n    <div className=\"pokemon-list\">\r\n      <h2>Poke list</h2>\r\n      <div className=\"pokemons\">\r\n        <ul>{filtered}</ul>\r\n      </div>\r\n      <button\r\n        className=\"go-back-button\"\r\n        onClick={() => store.onTypeSelected('')}\r\n      >\r\n        Go to full list <i className=\"fa fa-home\"></i>\r\n      </button>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeTypeList\r\n","import { observable, action, makeObservable, configure, computed } from 'mobx'\r\nimport axios from 'axios'\r\n\r\nconfigure({ enforceActions: `observed` })\r\nclass PokeStore {\r\n\tconstructor() {\r\n\t\tthis._apiURL = 'https://pokeapi.co/api/v2'\r\n\t\tthis.pokeList = []\r\n\t\tthis.pokeStats = []\r\n\t\tthis.pokeTypesOptions = []\r\n\t\tthis.pokeTypeList = []\r\n\t\tthis.pokeTypeID = ''\r\n\t\tthis.pokeID = ''\r\n\t\tthis.filteredList = []\r\n\t\tthis.limit = 10\r\n\t\tthis.offset = 0\r\n\t\tthis.filter = ''\r\n\r\n\t\tmakeObservable(this, {\r\n\t\t\tfilteredList: observable,\r\n\t\t\tpokeList: observable,\r\n\t\t\tpokeID: observable,\r\n\t\t\tpokeTypeID: observable,\r\n\t\t\tpokeStats: observable,\r\n\t\t\tfilter: observable,\r\n\t\t\tpokeTypesOptions: observable,\r\n\t\t\tpokeTypeList: observable,\r\n\t\t\tlimit: observable,\r\n\t\t\toffset: observable,\r\n\t\t\tonPokemonSelected: action,\r\n\t\t\tsetPokeStats: action,\r\n\t\t\tsetPokeList: action,\r\n\t\t\tsetPokeTypesOptions: action,\r\n\t\t\tsetPokeTypeList: action,\r\n\t\t\tonTypeSelected: action,\r\n\t\t\tsetLimit: action,\r\n\t\t\tsetOffset: action,\r\n\t\t\tupdateFilter: action,\r\n\t\t\tsetFilteredFullList: action,\r\n\t\t\tfilteredFullList: computed,\r\n\t\t\tfilteredTypesList: computed,\r\n\t\t\t// _apiURL: observable,\r\n\t\t\t// getResource: action,\r\n\t\t\t// getAllPokemons: action,\r\n\t\t\t// getPokemon: action,\r\n\t\t})\r\n\t}\r\n\r\n\tgetResource = async (url) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(`${this._apiURL}${url}`)\r\n\t\t\treturn res.data.results\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t}\r\n\r\n\tgetCurrentResource = async (url) => {\r\n\t\ttry {\r\n\t\t\tconst res = await axios.get(`${this._apiURL}${url}`)\r\n\t\t\treturn res.data\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error)\r\n\t\t}\r\n\t}\r\n\r\n\tgetAllPokemons = async (limit, offset) => {\r\n\t\tconst pokeList = await this.getResource(\r\n\t\t\t`/pokemon?limit=${limit}&offset=${offset}`\r\n\t\t)\r\n\t\treturn pokeList.map(this.transformPokeList)\r\n\t}\r\n\r\n\tgetPokemon = async (id) => {\r\n\t\tconst pokemon = await this.getCurrentResource(`/pokemon/${id}`)\r\n\t\treturn this.transformPokemon(pokemon)\r\n\t}\r\n\r\n\tgetAllTypes = async () => {\r\n\t\ttry {\r\n\t\t\tconst types = await this.getResource(`/type/`)\r\n\t\t\treturn types.map(this.transformPokeList)\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error)\r\n\t\t}\r\n\t}\r\n\r\n\tgetPokemonWithCurrentType = async (id) => {\r\n\t\tconst pokeList = await this.getCurrentResource(`/type/${id}`)\r\n\t\treturn pokeList.pokemon\r\n\t}\r\n\r\n\tget filteredFullList() {\r\n\t\tconst matchesFilter = new RegExp(this.filter, 'i')\r\n\t\treturn this.filteredList.filter(\r\n\t\t\t({ name }) => !this.filter || matchesFilter.test(name)\r\n\t\t)\r\n\t}\r\n\r\n\tget filteredTypesList() {\r\n\t\tconst matchesFilter = new RegExp(this.filter, 'i')\r\n\t\treturn this.pokeTypeList.filter(\r\n\t\t\t({ pokemon: { name } }) => !this.filter || matchesFilter.test(name)\r\n\t\t)\r\n\t}\r\n\r\n\tsetLimit = (data) => {\r\n\t\tthis.limit = data\r\n\t}\r\n\r\n\tsetOffset = (data, value) => {\r\n\t\tif (value === 1) {\r\n\t\t\tthis.offset += data\r\n\t\t} else if (value === -1) {\r\n\t\t\tthis.offset -= data\r\n\t\t} else if (value === 0) {\r\n\t\t\tthis.offset = 0\r\n\t\t}\r\n\t}\r\n\r\n\tsetFilteredFullList = (data) => {\r\n\t\tthis.filteredList = data\r\n\t}\r\n\r\n\tupdateFilter = (value) => {\r\n\t\tthis.filter = value\r\n\t}\r\n\r\n\tsetPokeStats = (data) => {\r\n\t\tthis.pokeStats = data\r\n\t}\r\n\r\n\tsetPokeTypeList = (data) => {\r\n\t\tthis.pokeTypeList = data\r\n\t}\r\n\r\n\tsetPokeTypesOptions = (data) => {\r\n\t\tthis.pokeTypesOptions = data\r\n\t}\r\n\r\n\tsetPokeList = (data) => {\r\n\t\tthis.pokeList = data\r\n\t}\r\n\r\n\tonTypeSelected = (id) => {\r\n\t\tthis.pokeTypeID = id\r\n\t}\r\n\r\n\tonPokemonSelected = (id) => {\r\n\t\tthis.pokeID = id\r\n\t}\r\n\r\n\textractId = (item) => {\r\n\t\tconst idRegExp = /\\/([0-9]*)$/\r\n\t\treturn item.url.slice(0, -1).match(idRegExp)[0]\r\n\t}\r\n\r\n\ttransformPokemon = (pokemon) => {\r\n\t\treturn {\r\n\t\t\tname: pokemon.name,\r\n\t\t\tid: pokemon.id,\r\n\t\t\tsprite: pokemon.sprites.front_default,\r\n\t\t\tabilities: pokemon.abilities,\r\n\t\t\ttypes: pokemon.types,\r\n\t\t\theight: pokemon.height,\r\n\t\t\tweight: pokemon.weight,\r\n\t\t}\r\n\t}\r\n\r\n\ttransformPokeList = (pokemonList) => {\r\n\t\treturn {\r\n\t\t\tid: this.extractId(pokemonList),\r\n\t\t\tname: pokemonList.name,\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// transfromPokeTypeList = (pokemonList) => {\r\n// const arrNames = pokemonList.pokemon.map((item) => {\r\n//   return item.pokemon.name\r\n// })\r\n// const arrId = pokemonList.pokemon.map((item) => {\r\n//   return this.extractId(item.pokemon)\r\n// })\r\n\r\n// const br = Object.assign({}, arrNames)\r\n// const bb = Object.assign({}, arrId)\r\n\r\n// function renameObjectKey(oldObj, newName) {\r\n//   const newObj = {}\r\n\r\n//   Object.keys(oldObj).forEach((key) => {\r\n//     const value = oldObj[key]\r\n\r\n//     console.log(value)\r\n//   })\r\n\r\n//   return newObj\r\n// }\r\n\r\n// const name = renameObjectKey(br)\r\n\r\n//   return\r\n// }\r\n\r\nconst pokeState = new PokeStore()\r\npokeState.getAllPokemons(1050, 0).then((data) => {\r\n\tpokeState.setFilteredFullList(data)\r\n})\r\n\r\nexport default pokeState\r\n","import pokeState from \"./pokeStore\";\r\nexport default pokeState;\r\n","import React, { useCallback, useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeDetails.scss'\r\n// import { toJS } from \"mobx\"\r\n\r\nconst PokeDetails = observer(({ store }) => {\r\n  const updatePokemon = useCallback(() => {\r\n    store\r\n      .getPokemon(store.pokeID)\r\n      .then((data) => store.setPokeStats(data))\r\n      .catch((e) => console.log(e))\r\n  }, [store.pokeID])\r\n\r\n  useEffect(() => {\r\n    if (store.pokeID) updatePokemon()\r\n  }, [store.pokeID])\r\n\r\n  const { name, abilities, types, height, weight, sprite } = store.pokeStats\r\n\r\n  const renderTypes = () => {\r\n    if (!types) {\r\n      return\r\n    }\r\n    const res = types.map((item) => {\r\n      return (\r\n        <li key={item.type.url} className=\"pokelist-item\">\r\n          - {item.type.name}\r\n        </li>\r\n      )\r\n    })\r\n    return res\r\n  }\r\n\r\n  const renderAbilities = () => {\r\n    if (!abilities) {\r\n      return\r\n    }\r\n\r\n    const res = abilities.map((item) => {\r\n      return <li key={item.ability.url}>- {item.ability.name}</li>\r\n    })\r\n    return res\r\n  }\r\n\r\n  const pokeTypes = renderTypes()\r\n  const pokeAbilities = renderAbilities()\r\n\r\n  return (\r\n    <div className=\"poke-info\">\r\n      {!store.pokeStats && <span>Loading...</span>}\r\n      <h2>{name} card</h2>\r\n      <p>Height: {height}</p>\r\n      <p>Weight: {weight}</p>\r\n      <br />\r\n      <div className=\"wrapper\">\r\n        <ul>Types:{pokeTypes}</ul>\r\n      </div>\r\n      <br />\r\n      <div className=\"wrapper\">\r\n        <ul>Abilities: {pokeAbilities}</ul>\r\n      </div>\r\n      <img src={sprite} alt=\"\"></img>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeDetails\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeDetails.scss'\r\n\r\nconst RandomPokemon = observer(({ store }) => {\r\n  const updateRandomPokemon = useCallback(() => {\r\n    const id = Math.floor(Math.random() * 160 + 50)\r\n    store\r\n      .getPokemon(id)\r\n      .then((data) => store.setPokeStats(data))\r\n      .catch((e) => console.log(e))\r\n  }, [store.pokeStats])\r\n\r\n  useEffect(() => {\r\n    updateRandomPokemon()\r\n    let itemId = setInterval(() => updateRandomPokemon(), 5000)\r\n    return () => {\r\n      clearInterval(itemId)\r\n    }\r\n  }, [])\r\n\r\n  const { name, abilities, types, height, weight, sprite } = store.pokeStats\r\n\r\n  const renderTypes = () => {\r\n    if (!types) {\r\n      return\r\n    }\r\n    const res = types.map((item) => {\r\n      return (\r\n        <li key={item.type.url} className=\"pokelist-item\">\r\n          - {item.type.name}\r\n        </li>\r\n      )\r\n    })\r\n    return res\r\n  }\r\n\r\n  const renderAbilities = () => {\r\n    if (!abilities) {\r\n      return\r\n    }\r\n\r\n    const res = abilities.map((item) => {\r\n      return (\r\n        <li key={item.ability.url} className=\"pokelist-item\">\r\n          - {item.ability.name}\r\n        </li>\r\n      )\r\n    })\r\n    return res\r\n  }\r\n\r\n  const pokeTypes = renderTypes()\r\n  const pokeAbilities = renderAbilities()\r\n\r\n  return (\r\n    <div className=\"poke-info\">\r\n      {!store.pokeStats && <span>Loading...</span>}\r\n      <div className=\"wrapper-info\">\r\n        <h2>{name} card</h2>\r\n        <p>Height: {height}</p>\r\n        <p>Weight: {weight}</p>\r\n        <br />\r\n        <div className=\"wrapper\">\r\n          <ul>Types:{pokeTypes}</ul>\r\n        </div>\r\n        <br />\r\n        <div className=\"wrapper\">\r\n          <ul>Abilities: {pokeAbilities}</ul>\r\n        </div>\r\n        <img src={sprite} alt=\"\"></img>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default RandomPokemon\r\n","import PokeTypeOptions from \"./pokeTypeOptions\";\r\nexport default PokeTypeOptions;\r\n","import React, { useEffect } from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './pokeTypeOptions.scss'\r\n\r\nconst PokeTypeOptions = observer(({ store }) => {\r\n  useEffect(() => {\r\n    store.getAllTypes().then((data) => {\r\n      store.setPokeTypesOptions(data)\r\n    })\r\n  }, [store])\r\n\r\n  const getPokeOptions = (arr) => {\r\n    if (!arr) {\r\n      return\r\n    }\r\n    if (store.pokeTypeId === 0) {\r\n      return\r\n    }\r\n    return arr.map((optionItem, i) => {\r\n      const { id, name } = optionItem\r\n      return (\r\n        <option value={id.slice(1)} key={i}>\r\n          {name}\r\n        </option>\r\n      )\r\n    })\r\n  }\r\n\r\n  const opt = getPokeOptions(store.pokeTypesOptions)\r\n\r\n  return (\r\n    <div className=\"poke-options\">\r\n      <span>Type: </span>\r\n      <select onChange={(e) => store.onTypeSelected(e.target.value)}>\r\n        {opt}\r\n      </select>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default PokeTypeOptions\r\n","import SearchPanel from \"./searchPanel\";\r\nexport default SearchPanel;\r\n","import React from 'react'\r\nimport { observer } from 'mobx-react'\r\nimport './searchPanel.scss'\r\n\r\nconst SearchPanel = observer(({ store }) => {\r\n  const filterNames = (value) => {\r\n    store.updateFilter(value)\r\n  }\r\n  return (\r\n    <div className=\"filter-panel\">\r\n      <input\r\n        className=\"filter-input\"\r\n        value={store.filter}\r\n        onChange={(e) => filterNames(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Enter pokemon name\"\r\n      ></input>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default SearchPanel\r\n","import App from \"./app\";\r\nexport default App;\r\n","import React from 'react'\nimport { observer } from 'mobx-react'\nimport Header from '../header'\nimport { PokeList, PokeTypesList } from '../pokeList'\nimport pokeState from '../Store'\nimport { PokeDetails, RandomPokemon } from '../pokeDetails'\nimport PokeTypeOptions from '../pokeTypeOptions'\nimport SearchPanel from '../searchPanel'\nimport './App.scss'\n\nconst App = () => {\n  const showPokeDetailsComponent = pokeState.pokeID ? (\n    <PokeDetails store={pokeState} />\n  ) : (\n    <RandomPokemon store={pokeState} />\n  )\n\n  const showFilteredListByType = pokeState.pokeTypeID ? (\n    <PokeTypesList store={pokeState} />\n  ) : (\n    <PokeList store={pokeState} />\n  )\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"filter\">\n        <SearchPanel store={pokeState} />\n        <PokeTypeOptions store={pokeState} />\n      </div>\n      <div className=\"main-menu\">\n        {showFilteredListByType}\n        {showPokeDetailsComponent}\n      </div>\n    </div>\n  )\n}\n\nexport default observer(App)\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}